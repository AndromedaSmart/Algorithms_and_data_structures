#include <iostream>
#include <vector>
#include <algorithm>
#define ll long long
 
using namespace std;
 
static ll INF = 100000000000;
 
vector <ll> Findelem(vector <ll> a)
{
    vector<ll> b(a.size() + 1, INF);
    vector<ll> post(a.size() + 1);
    vector<ll> previous(a.size());
    ll L = 0;
    post[0] = previous[0] = -1;
    b[0] = -INF;
 
    for (auto i = 0; i < a.size(); ++i)
    {
        ll j = upper_bound (b.begin(), b.end(), a[i]) - b.begin();
        if (b[j - 1] < a[i] && a[i] < b[j])
        {
            b[j] = a[i];
            post[j] = i;
            previous[i] = post[j - 1];
            L = max(L, j);
        }
    }
 
    vector <ll> ans;
    ll p = post[L];
    while (p != -1)
    {
        ans.emplace_back(a[p]);
        p = previous[p];
    }
    reverse(ans.begin(), ans.end());
    return ans;
}
 
int main()
{
    ll n;
    cin >> n;
    vector <ll> rex(n);
    for (auto i = 0; i < n; ++i)
        cin >> rex[i];
    vector <ll> ans = Findelem(rex);
 
    cout << ans.size() << endl;
    for (auto const &i : ans)
        cout << i << ' ';
    return 0;
}
